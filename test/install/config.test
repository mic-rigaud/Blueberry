# @Author: michael
# @Date:   02-Jun-2019
# @Filename: config.py
# @Last modified by:   michael
# @Last modified time: 02-Jun-2019
# @License: GNU GPL v3


# Il faut completer ce fichier puis le renommer config.py


# Tokens du Bot Telegram
bot_token = "fffff"

# Utilisateurs
# Liste des utilisateurs qui seront autorisés à utiliser votre bot.
# Correspond également aux utilisateurs qui recevront les alertes.
# Les autres personnes seront refoulés par le bot.
user = [00000]

# Log
# Position du fichier de Log
log = "/builds/mic-rigaud/blueberry/log/blueberry.log"
# Espace ou est installé blueberry
# Cette variable ne sert que pour l'installation pour construire le fichier
# blueberry.service
work_dir = "/builds/mic-rigaud/blueberry"

# Ces variables ne sont utilisés que pour le développement.
# Ne pas les commenter pour que le fabfile fonctionne.
hosts = ['00.00.00.00']
hosts_dir = "/home/blueberry/blueberry"

# Les différents fichier ou sont installés les résultats des services suivant:
# nids
suricata_log = './src/test/data/suricata-log.json'

# Logwatch report
logwatch_report = "./src/test/data/report-test"

# Arpwatch mail report
arpwatch_mail = "./src/test/data/arpwatch-test"

# Blueberry ne fait que regarder régulièrement les fichiers définis précédemment
# Les fréquences ci-dessous définissent les fréquences de scan et d'alerting
# Plus les fréquences sont élevés plus l'application va charger le système
# Fréquence d'alerting de suricata en secondes
freq_nids = 3600

# La fréquence d'alerting pour arpwatch est journalière.
# En effet, il a été décidé que sur un réseau local l'ajout d'une machine n'est pas
# critique et par conséquent un compte rendu journalier est suffisant.
# Cette variable défini l'heure du compte rendu
freq_arpwatch = "18h00"

# La fréquence d'alerting pour logwatch est journalière.
# En effet, logwatch ne peut faire au mieux que des rapport journalier
# Cette variable défini l'heure du compte rendu
freq_logwatch = "18h00"

# Virustotal api Key
# Stay at "0" if not use
virustotal_key = "0"

# https://whois.whoisxmlapi.com/
# Subscribe to get Key.
# 500 req per month for free
# Stay at "0" if not use
whois_key = "0"

# Permet de dire si on souhaite etre alerter lors des tentatives de scans
nids_exclude_scan = True

# Permet de specifier des regles qui permettent exclure des evenements
# La construction est {1 : { "x" : { "y" : "z"}}} avec :
# 1 : est le numéro de la regle il doit etre unique
# "x" est la premiere clef dans l'evenement suricata
# "y" est la deuxieme clef (il peut il y avoir autant de clef que necessaire)
# "z" est l'element qui permet d'exclure la regle
nids_filtre_rule = {1: {"http": {"redirect": "/site/admin"}}}
